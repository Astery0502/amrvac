!=============================================================================
! amrvacusr.t.liska

! INCLUDE:amrvacnul/specialini.t
INCLUDE:amrvacnul/speciallog.t
INCLUDE:amrvacnul/specialbound.t
INCLUDE:amrvacnul/specialsource.t
!=============================================================================
subroutine initglobaldata_usr

include 'amrvacdef.f'
!-----------------------------------------------------------------------------
eqpar(gamma_)=1.4d0

end subroutine initglobaldata_usr
!=============================================================================
subroutine initonegrid_usr(ixG^L,ix^L,w,x)

! initialize one grid 

include 'amrvacdef.f'

integer, intent(in) :: ixG^L, ix^L
double precision, intent(in) :: x(ixG^S,1:ndim)
double precision, intent(inout) :: w(ixG^S,1:nw)

double precision :: front, rho0, rho1, pr0, pr1
!----------------------------------------------------------------------------

{^IFONED call mpistop("This is a multi-D HD problem") }

front=0.15d0
rho0=1.0d0
rho1=0.125d0
pr0=1.0d0
pr1=0.14d0
where(( ^D&x(ix^S,^D)+ )>front)
   w(ix^S,rho_)=rho0
   w(ix^S,m1_)=zero
   w(ix^S,m2_)=zero
   w(ix^S,e_)=pr0/(eqpar(gamma_)-one)
elsewhere
   w(ix^S,rho_)=rho1
   w(ix^S,m1_)=zero
   w(ix^S,m2_)=zero
   w(ix^S,e_)=pr1/(eqpar(gamma_)-one)
endwhere


end subroutine initonegrid_usr
!=============================================================================
! amrvacusr.t.liska
!=============================================================================
